(()=>{"use strict";var n={402:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),a=e.n(t),o=e(645),i=e.n(o)()(a());i.push([n.id,":root{\r\n  font-family: var(--main-font-family,-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif );\r\n}\r\n\r\nhtml,body{\r\n  margin:0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: var(--main-font-family) ;\r\n}\r\n\r\nbody{\r\n  background-size: cover;\r\n  height: 100%;\r\n}\r\n\r\n.container{\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1.5fr 1fr 1fr;\r\n  grid-template-rows: 1.8fr 1fr;\r\n  padding: .5rem 3rem;\r\n  font-weight: 500;\r\n  font-size: 1.3rem;\r\n  gap: 1rem;\r\n}\r\n\r\n.column-left,\r\n.column-right{\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n}\r\n\r\n.column-left{\r\n  grid-template-rows: 2fr 1fr 1fr ;\r\n  grid-column: 1/2;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column-right{\r\n  font-size: 2rem;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-column: 3/4;  \r\n}\r\n\r\n.column-center{\r\n  grid-column: 2/3;\r\n}\r\n\r\n.weather,\r\n.temperature-display,\r\n.city-name{\r\n  display: flex;\r\n  gap: .5rem;\r\n  font-size: 4rem;\r\n}\r\n\r\n.temperature-icon{\r\n  font-size: 2rem;\r\n  font-weight: lighter;\r\n}\r\n\r\n.weather-name{\r\n  font-size: xx-large;\r\n  font-weight: 900;\r\n}\r\n\r\n.loader{\r\n  display: none;\r\n  background-color: rgba(82, 81, 81, 0.5);\r\n  padding: .8rem 1rem .8rem 1rem;\r\n  border-radius: 15px;\r\n  font-size: 1rem;\r\n  color: white;\r\n  left: 55%;\r\n}\r\n\r\n.loader.visible{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n}\r\n\r\n.change-scale-container{\r\n  display: flex;\r\n  gap:.5rem;\r\n}\r\n\r\n/*TODO Toggle button */\r\n#change-scale .knobs:before{\r\n  content: '';\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 4px;\r\n  width: 20px;\r\n  height: 10px;\r\n  color: #fff;\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  line-height: 1;\r\n  padding: 9px 4px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.35), 0 10px 10px -5px rgba(0, 0, 0, 0.20);\r\n}\r\n\r\n#change-scale .checkbox:checked + .knobs:before{\r\n  content: '';\r\n  left: 32px;\r\n  background-color: #fff;\r\n}\r\n\r\n#change-scale .checkbox:checked ~ .layer{\r\n  background-color: #17c2bd;\r\n}\r\n\r\n#change-scale.knobs, #change-scale.knobs:before, #change-scale .layer{\r\n  transition: 0.2s ease all;\r\n}\r\n\r\n.knobs,\r\n.layer{\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n\r\n.change-scale{\r\n  position: relative;\r\n  top: 50%;\r\n  width: 65px;\r\n  height: 36px;\r\n  margin: -20px auto 0 auto;\r\n  overflow: hidden;\r\n  margin: 0;\r\n}\r\n\r\n.change-scale.r,\r\n.change-scale.r\r\n.layer{\r\n  border-radius: 100px;\r\n}\r\n\r\n.checkbox{\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  z-index: 3;\r\n}\r\n\r\n.knobs{\r\n  z-index: 2;\r\n}\r\n\r\n.layer{\r\n  width: 100%;\r\n  background-color: #17c2bd;\r\n  transition: 0.3s ease all;\r\n  z-index: 1;\r\n}\r\n\r\ni.fa-magnifying-glass{\r\n  margin-top: 2.3rem;\r\n  font-size: 2rem;\r\n}\r\n\r\ni.fa-magnifying-glass:hover{\r\n  cursor: pointer;\r\n  margin-top: 2.7rem;\r\n}\r\n\r\ninput{\r\n  border: none;\r\n  outline: none;\r\n  padding: 1rem;\r\n  font-family: var(--main-font-family);\r\n  font-size: 1.5rem;\r\n  font-weight: 900;\r\n  background-color: transparent;\r\n  border-radius: 20px;\r\n  color: white;\r\n  width: 75%;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.search-div{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.weekday,\r\n.feels-like-title,\r\n.humidity-title,\r\n.wind-speed-title{\r\n  font-weight: 700;\r\n  justify-content: center;\r\n}\r\n\r\n.feels-like,\r\n.humidity,\r\n.wind-speed{\r\n  display: flex;\r\n  gap: .5rem;\r\n  align-self: flex-start;\r\n  align-items:center;\r\n}\r\n\r\n.forecast-container{\r\n  display: grid;\r\n  background-color: rgba(90, 90, 90, 0.3);\r\n  border-radius: 15px;\r\n  justify-items: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  grid-template-columns: repeat(7,1fr);\r\n  grid-column: 1/4;\r\n  height: 100%;\r\n  color: white;\r\n}\r\n\r\n.day{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.max-temp,\r\n.min-temp,\r\n.weather-day,\r\n.icon{\r\n font-size: smaller; \r\n size: 1rem;\r\n justify-content: center;\r\n}\r\n\r\n.icon > img{\r\n  width: min(5rem);\r\n  padding: 1rem;\r\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,iKAAiK;AACnK;;AAEA;EACE,QAAQ;EACR,UAAU;EACV,YAAY;EACZ,qCAAqC;AACvC;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,oCAAoC;EACpC,6BAA6B;EAC7B,mBAAmB;EACnB,gBAAgB;EAChB,iBAAiB;EACjB,SAAS;AACX;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,gCAAgC;EAChC,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,2CAA2C;EAC3C,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,aAAa;EACb,UAAU;EACV,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA,sBAAsB;AACtB;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,WAAW;EACX,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;EACd,gBAAgB;EAChB,sBAAsB;EACtB,kBAAkB;EAClB,yDAAyD;EACzD,sFAAsF;AACxF;;AAEA;EACE,WAAW;EACX,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;;EAEE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;AACT;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,gBAAgB;EAChB,SAAS;AACX;;AAEA;;;EAGE,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,SAAS;EACT,UAAU;EACV,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,yBAAyB;EACzB,yBAAyB;EACzB,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,oCAAoC;EACpC,iBAAiB;EACjB,gBAAgB;EAChB,6BAA6B;EAC7B,mBAAmB;EACnB,YAAY;EACZ,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;;;;EAIE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;;;EAGE,aAAa;EACb,UAAU;EACV,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,mBAAmB;EACnB,qBAAqB;EACrB,mBAAmB;EACnB,SAAS;EACT,oCAAoC;EACpC,gBAAgB;EAChB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;;;;CAIC,kBAAkB;CAClB,UAAU;CACV,uBAAuB;AACxB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf",sourcesContent:[":root{\r\n  font-family: var(--main-font-family,-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif );\r\n}\r\n\r\nhtml,body{\r\n  margin:0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: var(--main-font-family) ;\r\n}\r\n\r\nbody{\r\n  background-size: cover;\r\n  height: 100%;\r\n}\r\n\r\n.container{\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1.5fr 1fr 1fr;\r\n  grid-template-rows: 1.8fr 1fr;\r\n  padding: .5rem 3rem;\r\n  font-weight: 500;\r\n  font-size: 1.3rem;\r\n  gap: 1rem;\r\n}\r\n\r\n.column-left,\r\n.column-right{\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n}\r\n\r\n.column-left{\r\n  grid-template-rows: 2fr 1fr 1fr ;\r\n  grid-column: 1/2;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.column-right{\r\n  font-size: 2rem;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-column: 3/4;  \r\n}\r\n\r\n.column-center{\r\n  grid-column: 2/3;\r\n}\r\n\r\n.weather,\r\n.temperature-display,\r\n.city-name{\r\n  display: flex;\r\n  gap: .5rem;\r\n  font-size: 4rem;\r\n}\r\n\r\n.temperature-icon{\r\n  font-size: 2rem;\r\n  font-weight: lighter;\r\n}\r\n\r\n.weather-name{\r\n  font-size: xx-large;\r\n  font-weight: 900;\r\n}\r\n\r\n.loader{\r\n  display: none;\r\n  background-color: rgba(82, 81, 81, 0.5);\r\n  padding: .8rem 1rem .8rem 1rem;\r\n  border-radius: 15px;\r\n  font-size: 1rem;\r\n  color: white;\r\n  left: 55%;\r\n}\r\n\r\n.loader.visible{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n}\r\n\r\n.change-scale-container{\r\n  display: flex;\r\n  gap:.5rem;\r\n}\r\n\r\n/*TODO Toggle button */\r\n#change-scale .knobs:before{\r\n  content: '';\r\n  position: absolute;\r\n  top: 4px;\r\n  left: 4px;\r\n  width: 20px;\r\n  height: 10px;\r\n  color: #fff;\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  line-height: 1;\r\n  padding: 9px 4px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  transition: 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15) all;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.35), 0 10px 10px -5px rgba(0, 0, 0, 0.20);\r\n}\r\n\r\n#change-scale .checkbox:checked + .knobs:before{\r\n  content: '';\r\n  left: 32px;\r\n  background-color: #fff;\r\n}\r\n\r\n#change-scale .checkbox:checked ~ .layer{\r\n  background-color: #17c2bd;\r\n}\r\n\r\n#change-scale.knobs, #change-scale.knobs:before, #change-scale .layer{\r\n  transition: 0.2s ease all;\r\n}\r\n\r\n.knobs,\r\n.layer{\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n\r\n.change-scale{\r\n  position: relative;\r\n  top: 50%;\r\n  width: 65px;\r\n  height: 36px;\r\n  margin: -20px auto 0 auto;\r\n  overflow: hidden;\r\n  margin: 0;\r\n}\r\n\r\n.change-scale.r,\r\n.change-scale.r\r\n.layer{\r\n  border-radius: 100px;\r\n}\r\n\r\n.checkbox{\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  z-index: 3;\r\n}\r\n\r\n.knobs{\r\n  z-index: 2;\r\n}\r\n\r\n.layer{\r\n  width: 100%;\r\n  background-color: #17c2bd;\r\n  transition: 0.3s ease all;\r\n  z-index: 1;\r\n}\r\n\r\ni.fa-magnifying-glass{\r\n  margin-top: 2.3rem;\r\n  font-size: 2rem;\r\n}\r\n\r\ni.fa-magnifying-glass:hover{\r\n  cursor: pointer;\r\n  margin-top: 2.7rem;\r\n}\r\n\r\ninput{\r\n  border: none;\r\n  outline: none;\r\n  padding: 1rem;\r\n  font-family: var(--main-font-family);\r\n  font-size: 1.5rem;\r\n  font-weight: 900;\r\n  background-color: transparent;\r\n  border-radius: 20px;\r\n  color: white;\r\n  width: 75%;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.search-div{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.weekday,\r\n.feels-like-title,\r\n.humidity-title,\r\n.wind-speed-title{\r\n  font-weight: 700;\r\n  justify-content: center;\r\n}\r\n\r\n.feels-like,\r\n.humidity,\r\n.wind-speed{\r\n  display: flex;\r\n  gap: .5rem;\r\n  align-self: flex-start;\r\n  align-items:center;\r\n}\r\n\r\n.forecast-container{\r\n  display: grid;\r\n  background-color: rgba(90, 90, 90, 0.3);\r\n  border-radius: 15px;\r\n  justify-items: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  grid-template-columns: repeat(7,1fr);\r\n  grid-column: 1/4;\r\n  height: 100%;\r\n  color: white;\r\n}\r\n\r\n.day{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.max-temp,\r\n.min-temp,\r\n.weather-day,\r\n.icon{\r\n font-size: smaller; \r\n size: 1rem;\r\n justify-content: center;\r\n}\r\n\r\n.icon > img{\r\n  width: min(5rem);\r\n  padding: 1rem;\r\n}"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],l=o[s]||0,d="".concat(s," ").concat(l);o[s]=l+1;var p=e(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var f=a(u,t);t.byIndex=A,r.splice(A,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=e(o[i]);r[A].references--}for(var c=t(n,a),s=0;s<o.length;s++){var l=e(o[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},318:(n,r,e)=>{n.exports=e.p+"e802a9f70d731d2fd2f4.png"},833:(n,r,e)=>{n.exports=e.p+"cdbce7e3996f9609219f.png"},752:(n,r,e)=>{n.exports=e.p+"18dc023e509e4727794e.png"},982:(n,r,e)=>{n.exports=e.p+"956d99d7047f2c061bf0.png"},989:(n,r,e)=>{n.exports=e.p+"9ce18f766ecb176097b8.png"},549:(n,r,e)=>{n.exports=e.p+"cc81a50e8e6604dfe000.png"},539:(n,r,e)=>{n.exports=e.p+"d69fd8c352955f7d7ea3.png"},158:(n,r,e)=>{n.exports=e.p+"d69fd8c352955f7d7ea3.png"},518:(n,r,e)=>{n.exports=e.p+"651e07809f6d252af7c4.png"},677:(n,r,e)=>{n.exports=e.p+"651e07809f6d252af7c4.png"},575:(n,r,e)=>{n.exports=e.p+"4f8d3bcc2812c7b5d9c9.png"},688:(n,r,e)=>{n.exports=e.p+"4f8d3bcc2812c7b5d9c9.png"},68:(n,r,e)=>{n.exports=e.p+"9500f729939001d86d11.png"},840:(n,r,e)=>{n.exports=e.p+"9500f729939001d86d11.png"},755:(n,r,e)=>{n.exports=e.p+"939dc1c78a3e515af5bc.png"},219:(n,r,e)=>{n.exports=e.p+"939dc1c78a3e515af5bc.png"},747:(n,r,e)=>{n.exports=e.p+"66cd0f5e79266310836a.png"},666:(n,r,e)=>{n.exports=e.p+"66cd0f5e79266310836a.png"},491:(n,r,e)=>{n.exports=e.p+"d35abc149a7493c01157.png"},56:(n,r,e)=>{n.exports=e.p+"e6f38d24bcbe65bc4b4a.jpg"}},r={};function e(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),(()=>{var n=e(379),r=e.n(n),t=e(795),a=e.n(t),o=e(569),i=e.n(o),A=e(565),c=e.n(A),s=e(216),l=e.n(s),d=e(589),p=e.n(d),u=e(402),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),r()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals,e(56);const m=async(n,r)=>{const e=await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${n}&units=${r}&appid=76d5136cd55d14c88e4d9549d0f550f2`),t=await e.json(),a=await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${t.coord.lat}&lon=${t.coord.lon}&units=${r}&exclude=minutely,alerts&appid=76d5136cd55d14c88e4d9549d0f550f2`);return{dataSet1:t,dataSet2:await a.json()}};async function g(n,r="metric"){try{const e=await async function(n,r){const e=document.querySelector(".loader");try{return e.textContent="Loading ...",e.classList.toggle("visible"),await Promise.race([m(n,r),(t=5e3,new Promise((n=>{setTimeout((()=>{n("Timeout")}),t)})))]).then((n=>(e.classList.toggle("visible"),n)))}catch(n){return e.textContent="City not found!",void setTimeout((()=>{e.classList.toggle("visible"),e.textContent="Loading ..."}),2e3)}var t}(n,r);if(!e)return;let t=new Date((new Date).toLocaleString("en-US",{timeZone:e.timezone}));const a=Math.floor(e.dataSet1.main.temp),o=Math.floor(e.dataSet1.main.feels_like),i=Math.floor(e.dataSet1.wind.speed),A=e.dataSet1.name,c=e.dataSet1.sys.country,s=e.dataSet1.weather[0].main,l=e.dataSet1.weather[0].icon,d=e.dataSet1.weather[0].description,p=e.dataSet1.main.humidity;let u=[];for(let n=1;n<8;n++){const r=e.dataSet2.daily[n],t={temperatureMax:r.temp.max,temperatureMin:r.temp.min,weather:r.weather[0].main,icon:r.weather[0].icon};u.push(t)}return{cityName:A,countryName:c,time:t,temperature:a,weather:s,weatherDesc:d,icon:l,feelsLike:o,humidity:p,windSpeed:i,scale:r,dailyForecast:u}}catch(n){return}}var C=e(318),h=e(833),y=e(752),E=e(982),B=e(989),b=e(549),x=e(539),w=e(158),v=e(518),k=e(677),S=e(575),z=e(688),j=e(68),q=e(840),U=e(755),T=e(219),M=e(747),L=e(666),Y=e(491);function Z(n){document.querySelector("body");const r=document.querySelector(".weather-info"),e=document.querySelector(".weather-icon"),t=document.querySelector(".city-name"),a=document.querySelector(".date"),o=document.querySelector(".temperature-value"),i=document.querySelector(".temperature-icon"),A=document.querySelector(".feels-like-icon"),c=document.querySelector(".feels-like-value"),s=document.querySelector(".humidity-icon"),l=document.querySelector(".humidity-value"),d=document.querySelector(".wind-speed-icon"),p=document.querySelector(".wind-speed-value"),u=document.querySelector(".change-scale-desc"),f=document.querySelector("input#search"),m=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];let g,Z={"01d":C,"01n":h,"02d":y,"02n":E,"03d":B,"03n":b,"04d":x,"04n":w,"09d":v,"09n":k,"10d":S,"10n":z,"11d":j,"11n":q,"13d":U,"13n":T,"50d":M,"50n":L,unknown:Y};Object.entries(Z).forEach((r=>{r[0]==n.icon&&(g=r[1])})),e.innerHTML=`<img src="${g}"></img>`,r.textContent=n.weather,t.textContent=n.cityName+", "+n.countryName,o.textContent=n.temperature,i.textContent="metric"===n.scale?"ºC":"ºF",a.textContent=m[n.time.getDay()]+", "+n.time.getDate()+" - "+("0"+n.time.getHours()).slice(-2)+":"+("0"+n.time.getMinutes()).slice(-2),A.classList.add("fa-solid"),A.classList.add("fa-temperature-high"),c.textContent=n.feelsLike+" "+i.textContent,s.classList.add("fa-solid"),s.classList.add("fa-droplet"),l.textContent=n.humidity+" %",d.classList.add("fa-solid"),d.classList.add("fa-wind"),f.value="",p.textContent=n.windSpeed+" "+("metric"===n.scale?"meter/sec":"miles/hour"),u.textContent="Change to "+("metric"===n.scale?"imperial":"metric");for(let r=0;r<n.dailyForecast.length;r++){const e=document.querySelector(`.day${r+1}`),t=document.querySelector(`.day${r+1} > .weekday`),a=document.querySelector(`.day${r+1} > .max-temp`),o=document.querySelector(`.day${r+1} > .min-temp`),A=document.querySelector(`.day${r+1} > .weather-day`),c=document.querySelector(`.day${r+1} > .icon`);let s;Object.entries(Z).forEach((r=>{r[0]==n.icon&&(s=r[1])})),c.innerHTML=`<img src="${s}"></img>`,A.textContent=n.dailyForecast[r].weather,a.textContent=Math.floor(n.dailyForecast[r].temperatureMax)+" "+i.textContent,o.textContent=Math.floor(n.dailyForecast[r].temperatureMin)+" "+i.textContent,t.innerHTML=O(n.time.getDay(),r,m),e.appendChild(t),e.appendChild(a),e.appendChild(o),e.appendChild(A),e.appendChild(c)}}const O=(n,r,e)=>{let t=n+r;return t>6&&(t-=7),e[t]};!async function(){const n=document.querySelector(".fa-magnifying-glass"),r=document.querySelector("input#search"),e=document.querySelector(".change-scale"),t=document.querySelector(".temperature-icon"),a=document.querySelector(".city-name");n.addEventListener("click",(async()=>{try{Z(await g(r.value))}catch(n){}})),e.addEventListener("click",(async()=>{if(t&&a)try{const n="ºC"===t.textContent?"imperial":"metric";Z(await g(a.textContent,n))}catch(n){}}))}(),async function(){Z(await g("Barcelona"))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,